basePath: /api
definitions:
  handlers.BookingWithPaymentRequest:
    properties:
      booking:
        $ref: '#/definitions/services.BookingRequest'
      payment:
        $ref: '#/definitions/services.PaymentRequest'
    type: object
  handlers.BookingWithPaymentResponse:
    properties:
      booking:
        $ref: '#/definitions/models.Booking'
      receipt:
        $ref: '#/definitions/models.Receipt'
    type: object
  handlers.DemoResponse:
    properties:
      description:
        type: string
      result:
        type: string
      title:
        type: string
    type: object
  handlers.ReceiptRequest:
    properties:
      amount:
        minimum: 1
        type: integer
      booking_id:
        type: integer
      payment_date:
        type: string
      payment_method:
        enum:
        - Credit
        - Debit
        - Bank
        - Transfer
        type: string
    required:
    - amount
    - booking_id
    - payment_date
    - payment_method
    type: object
  models.Booking:
    properties:
      booking_date:
        type: string
      booking_id:
        type: integer
      booking_name:
        type: string
      check_in_date:
        type: string
      check_out_date:
        type: string
      receipt:
        $ref: '#/definitions/models.Receipt'
      room:
        $ref: '#/definitions/models.Room'
      room_num:
        type: integer
      statuses:
        items:
          $ref: '#/definitions/models.RoomStatus'
        type: array
      total_price:
        type: integer
    required:
    - booking_name
    - check_in_date
    - check_out_date
    - room_num
    type: object
  models.Facility:
    properties:
      fac_id:
        type: integer
      name:
        type: string
      room_facilities:
        items:
          $ref: '#/definitions/models.RoomFacility'
        type: array
    type: object
  models.Receipt:
    properties:
      amount:
        type: integer
      booking_id:
        type: integer
      issue_date:
        type: string
      payment_date:
        type: string
      payment_method:
        enum:
        - Credit
        - Debit
        - Bank
        - Transfer
        type: string
      receipt_id:
        type: integer
    required:
    - amount
    - payment_method
    type: object
  models.Room:
    properties:
      bookings:
        items:
          $ref: '#/definitions/models.Booking'
        type: array
      room_num:
        type: integer
      room_type:
        $ref: '#/definitions/models.RoomType'
      statuses:
        items:
          $ref: '#/definitions/models.RoomStatus'
        type: array
      type_id:
        type: integer
    type: object
  models.RoomFacility:
    properties:
      fac_id:
        type: integer
      type_id:
        type: integer
    type: object
  models.RoomStatus:
    properties:
      booking:
        $ref: '#/definitions/models.Booking'
      booking_id:
        type: integer
      calendar:
        type: string
      room_num:
        type: integer
      status:
        enum:
        - Available
        - Occupied
        type: string
    required:
    - status
    type: object
  models.RoomType:
    properties:
      area:
        type: integer
      description:
        type: string
      name:
        type: string
      noOfGuest:
        type: integer
      price_per_night:
        type: integer
      room_facilities:
        items:
          $ref: '#/definitions/models.RoomFacility'
        type: array
      rooms:
        items:
          $ref: '#/definitions/models.Room'
        type: array
      type_id:
        type: integer
    type: object
  services.BookingRequest:
    properties:
      booking_name:
        type: string
      check_in_date:
        type: string
      check_out_date:
        type: string
      room_num:
        type: integer
    required:
    - booking_name
    - check_in_date
    - check_out_date
    - room_num
    type: object
  services.PaymentRequest:
    properties:
      payment_date:
        type: string
      payment_method:
        enum:
        - Credit
        - Debit
        - Bank
        - Transfer
        type: string
    required:
    - payment_date
    - payment_method
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a hotel room booking server with transaction management and
    concurrency control.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Hotel Booking API
  version: "1.0"
paths:
  /bookings:
    get:
      consumes:
      - application/json
      description: Find rooms available for booking in a specific date range and guest
        count
      parameters:
      - description: Check-in date (YYYY-MM-DD)
        in: query
        name: checkIn
        required: true
        type: string
      - description: Check-out date (YYYY-MM-DD)
        in: query
        name: checkOut
        required: true
        type: string
      - description: Number of guests
        in: query
        name: guests
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search for available rooms
      tags:
      - bookings
  /bookings/{id}:
    delete:
      consumes:
      - application/json
      description: Cancel an existing booking and free up the room
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cancel a booking
      tags:
      - bookings
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific booking by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Booking not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get booking details
      tags:
      - bookings
    put:
      consumes:
      - application/json
      description: Update an existing booking with transaction and concurrency control
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated booking details
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/services.BookingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a booking
      tags:
      - bookings
  /bookings/check-availability:
    get:
      consumes:
      - application/json
      description: Check if a specific room is available for a date range
      parameters:
      - description: Room number
        in: query
        name: roomNum
        required: true
        type: integer
      - description: Check-in date (YYYY-MM-DD)
        in: query
        name: checkIn
        required: true
        type: string
      - description: Check-out date (YYYY-MM-DD)
        in: query
        name: checkOut
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check room availability
      tags:
      - bookings
  /bookings/with-payment:
    post:
      consumes:
      - application/json
      description: Create a new booking with payment in a single atomic transaction.
        First to pay gets the room.
      parameters:
      - description: Booking and payment details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.BookingWithPaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.BookingWithPaymentResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create booking with payment
      tags:
      - bookings
  /demos/concurrent-bookings:
    get:
      consumes:
      - application/json
      description: Demonstrates how pessimistic locking prevents double booking
      parameters:
      - description: Room number
        in: query
        name: roomNum
        required: true
        type: integer
      - description: Check-in date (YYYY-MM-DD)
        in: query
        name: checkIn
        required: true
        type: string
      - description: Check-out date (YYYY-MM-DD)
        in: query
        name: checkOut
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DemoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Concurrent Booking Demo
      tags:
      - demos
  /demos/dirty-read/{id}:
    get:
      consumes:
      - application/json
      description: Demonstrates the dirty read problem in database transactions
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DemoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Dirty Read Demo
      tags:
      - demos
  /demos/lost-update-with-locking/{id}:
    get:
      consumes:
      - application/json
      description: Demonstrates how pessimistic locking prevents lost updates
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DemoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Lost Update Prevention Demo
      tags:
      - demos
  /demos/lost-update/{id}:
    get:
      consumes:
      - application/json
      description: Demonstrates the lost update problem in concurrent transactions
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DemoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Lost Update Demo
      tags:
      - demos
  /demos/phantom-read:
    get:
      consumes:
      - application/json
      description: Demonstrates the phantom read problem in database transactions
      parameters:
      - description: Check-in date (YYYY-MM-DD)
        in: query
        name: checkIn
        required: true
        type: string
      - description: Check-out date (YYYY-MM-DD)
        in: query
        name: checkOut
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DemoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Phantom Read Demo
      tags:
      - demos
  /demos/serialization-anomaly:
    get:
      consumes:
      - application/json
      description: Demonstrates serialization anomaly in database transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DemoResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Serialization Anomaly Demo
      tags:
      - demos
  /facilities:
    get:
      consumes:
      - application/json
      description: Retrieve all room facilities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Facility'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all facilities
      tags:
      - facilities
  /facilities/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific facility
      parameters:
      - description: Facility ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Facility'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a facility by ID
      tags:
      - facilities
  /receipts:
    post:
      consumes:
      - application/json
      description: Create a payment receipt for a booking with transaction control
      parameters:
      - description: Receipt details
        in: body
        name: receipt
        required: true
        schema:
          $ref: '#/definitions/handlers.ReceiptRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Receipt'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new receipt
      tags:
      - receipts
  /receipts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing receipt with transaction control
      parameters:
      - description: Receipt ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a receipt
      tags:
      - receipts
    get:
      consumes:
      - application/json
      description: Retrieve a receipt by its ID
      parameters:
      - description: Receipt ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Receipt'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Receipt not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get receipt by ID
      tags:
      - receipts
    put:
      consumes:
      - application/json
      description: Update an existing receipt with transaction control
      parameters:
      - description: Receipt ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated receipt details
        in: body
        name: receipt
        required: true
        schema:
          $ref: '#/definitions/handlers.ReceiptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Receipt'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Receipt not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a receipt
      tags:
      - receipts
  /receipts/booking/{bookingId}:
    get:
      consumes:
      - application/json
      description: Retrieve a receipt associated with a specific booking
      parameters:
      - description: Booking ID
        in: path
        name: bookingId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Receipt'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Receipt not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get receipt by booking ID
      tags:
      - receipts
  /room-types:
    get:
      consumes:
      - application/json
      description: Retrieve all room types with their facilities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RoomType'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all room types
      tags:
      - room-types
  /room-types/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific room type with its facilities
      parameters:
      - description: Room Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoomType'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a room type by ID
      tags:
      - room-types
  /rooms:
    get:
      consumes:
      - application/json
      description: Retrieve all hotel rooms with their types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all rooms
      tags:
      - rooms
  /rooms/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific room by its room number
      parameters:
      - description: Room Number
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a room by ID
      tags:
      - rooms
  /rooms/{id}/calendar:
    get:
      consumes:
      - application/json
      description: Retrieve the availability calendar for a specific room
      parameters:
      - description: Room Number
        in: path
        name: id
        required: true
        type: integer
      - description: Start Date (YYYY-MM-DD)
        in: query
        name: startDate
        required: true
        type: string
      - description: End Date (YYYY-MM-DD)
        in: query
        name: endDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RoomStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get room calendar
      tags:
      - rooms
  /rooms/{id}/facilities:
    get:
      consumes:
      - application/json
      description: Retrieve a specific room with all its facilities
      parameters:
      - description: Room Number
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a room with its facilities
      tags:
      - rooms
  /rooms/type/{typeId}:
    get:
      consumes:
      - application/json
      description: Retrieve all rooms of a specific room type
      parameters:
      - description: Room Type ID
        in: path
        name: typeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get rooms by type
      tags:
      - rooms
swagger: "2.0"
